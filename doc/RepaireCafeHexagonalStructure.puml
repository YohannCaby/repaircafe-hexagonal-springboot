@startuml
'https://plantuml.com/class-diagram

package "core.port.persistence"{
    interface MemberRepoPort{
        List<Member> findAll()
        Member save(Member member)
        Member findById(String id)
        Member deleteById(String id)
    }

    package "core.port.persistence.impl"{
        class MemberRepo
    }
    MemberRepoPort <|-- MemberRepo
}
package "core.usecases"{
    interface MemberUseCase{
            Member saveOrUpdateMember(Member member)
            Member addRole(Member member, MemberRoleEnum role) throws MemberRoleAlreadyPresentException
            List<MemberRoleEnum> getRoles()
            Member removeRole(Member member, MemberRoleEnum role) throws NoMemberRolePresentExpception
            Member findBySerialNumber(String serialNumber)
            List<Member> search(String label)
    }
    package "core.usecases.impl"{
        class MemberUseCaseImpl
    }

    MemberUseCase <|-- MemberUseCaseImpl
    MemberUseCaseImpl o-- MemberRepoPort
}
package "core.exception" {
    exception BusinessExceptions
}
package "core.model"{
    class Device{
        String deviceSerialNumber
        String name
        String brand
        String model
        float weight
        List<Repair> repairList
    }
    class Member{
        String name
        String surname
        String memberSerialNumber
        int birthYear
        List<Device> deviceList
        List<Membership> membershipList
        List<MemberRoleEnum> roles
    }
    class Membership{
        LocalDate date
        LocalDate expiration
        float paid
    }
    class Repair{
        LocalDateTime date
        Member repairer
        long repairTime
        RepairStatus repairStatus
        String description
    }
    enum RepairStatus{
        REPAIRED,
        RUBISH,
        ADVICED,
        WILL_COME_BACK,
        UNKNOWN
        }
    enum MemberRole{
        VISITOR,
        REPAIR,
        RECEPTIONIST,
        UNKNOWN,
        TECH
    }

    Repair o-- RepairStatus
    Repair o-- Member

    Member o-- MemberRole
    Member o-- Membership
    Member o-- Device

    Device o-- Repair
}



package "infrastrucure.primary.rest"{
    class MemberRestControlerImpl<@RestController>
    class GlobalExceptionHandler<@ControllerAdvice>
    MemberRestControlerImpl o-- MemberUseCase
    BusinessExceptions <-- GlobalExceptionHandler : <<use>>
}

package "infrastrucure.secondary.db"{
    class MemberRepo<@Service>
    package "infrastrucure.secondary.db.repo"{
        interface MemberJpaRepo
        interface CrudRepository
        CrudRepository <|-- MemberJpaRepo
    }
    MemberRepo o-- MemberJpaRepo

    MemberRepoPort <|-- MemberRepo
}
package "configuration"{
    class BeanConfig<@Configuration>{
        MemberRepoPort memberRepoPort()
        MemberUseCase memberUseCase()
    }
}
@enduml